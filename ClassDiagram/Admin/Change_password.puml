@startuml
actor Admin
participant "UI/Interface" as UI
participant "AuthRouter" as Router
participant "AuthController" as Controller
participant "AuthRepository" as Repository
participant "AdminModel" as AdminModel
participant "Database" as DB

Admin -> UI: Request to change password
activate UI
UI -> Router: GET /admin/change-password
activate Router
Router -> Controller: showChangePasswordForm()
activate Controller
Controller -> UI: Display change password form
deactivate Controller
deactivate Router
deactivate UI

Admin -> UI: Submit new password
activate UI
UI -> Router: POST /admin/change-password
activate Router
Router -> Controller: changePassword(oldPassword, newPassword)
activate Controller
Controller -> Repository: validateOldPassword(adminId, oldPassword)
activate Repository

Repository -> AdminModel: fetchAdminById(adminId)
activate AdminModel
AdminModel -> DB: query admin by id
activate DB
DB --> AdminModel: admin data
deactivate DB
AdminModel --> Repository: admin data
deactivate AdminModel
Repository --> Controller: validate password result (valid/invalid)
deactivate Repository

Controller -> Repository: updatePassword(adminId, newPassword)
activate Repository
Repository -> AdminModel: updatePassword(adminId, newPassword)
activate AdminModel
AdminModel -> DB: update password in database
activate DB
DB --> AdminModel: password updated
deactivate DB
AdminModel --> Repository: password update success
deactivate AdminModel
Repository --> Controller: update success
deactivate Repository

Controller --> Router: 200 OK (password changed)
deactivate Controller
Router --> UI: 200 OK (password changed)
deactivate Router
UI --> Admin: Display success message (password updated)
deactivate UI
@enduml
